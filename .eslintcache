[{"/Users/caleb/IdeaProjects/poke-app-v1/src/index.js":"1","/Users/caleb/IdeaProjects/poke-app-v1/src/components/App.js":"2","/Users/caleb/IdeaProjects/poke-app-v1/src/components/GetPokemon.js":"3","/Users/caleb/IdeaProjects/poke-app-v1/src/components/NavbarIndex.js":"4","/Users/caleb/IdeaProjects/poke-app-v1/src/components/SearchPokemon.js":"5","/Users/caleb/IdeaProjects/poke-app-v1/src/components/TypeModal.js":"6","/Users/caleb/IdeaProjects/poke-app-v1/src/components/CreatePokeCards.js":"7","/Users/caleb/IdeaProjects/poke-app-v1/src/components/Hooks/useLoader.js":"8","/Users/caleb/IdeaProjects/poke-app-v1/src/components/Loader.js":"9","/Users/caleb/IdeaProjects/poke-app-v1/src/components/FavoritePokemon.js":"10","/Users/caleb/IdeaProjects/poke-app-v1/src/components/CardInfo.js":"11","/Users/caleb/IdeaProjects/poke-app-v1/src/components/Types.js":"12","/Users/caleb/IdeaProjects/poke-app-v1/src/components/StatChart.js":"13"},{"size":217,"mtime":1611258528097,"results":"14","hashOfConfig":"15"},{"size":5299,"mtime":1612238997446,"results":"16","hashOfConfig":"15"},{"size":5118,"mtime":1612122979170,"results":"17","hashOfConfig":"15"},{"size":5013,"mtime":1612109934993,"results":"18","hashOfConfig":"15"},{"size":1160,"mtime":1611777105460,"results":"19","hashOfConfig":"15"},{"size":2929,"mtime":1612109938655,"results":"20","hashOfConfig":"15"},{"size":10852,"mtime":1612233111767,"results":"21","hashOfConfig":"15"},{"size":332,"mtime":1611599506880,"results":"22","hashOfConfig":"15"},{"size":277,"mtime":1611714461992,"results":"23","hashOfConfig":"15"},{"size":845,"mtime":1611876809710,"results":"24","hashOfConfig":"15"},{"size":543,"mtime":1612078250498,"results":"25","hashOfConfig":"15"},{"size":1948,"mtime":1612233206993,"results":"26","hashOfConfig":"15"},{"size":1058,"mtime":1612209575128,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"30","usedDeprecatedRules":"31"},"ww143j",{"filePath":"32","messages":"33","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"34","messages":"35","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36","usedDeprecatedRules":"31"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39","usedDeprecatedRules":"31"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42","usedDeprecatedRules":"31"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"31"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"31"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"31"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"31"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54","usedDeprecatedRules":"31"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"58"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"31"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"31"},"/Users/caleb/IdeaProjects/poke-app-v1/src/index.js",["64"],"import React, {useState} from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(<App/>, document.querySelector('#root'));\n\n",["65","66"],"/Users/caleb/IdeaProjects/poke-app-v1/src/components/App.js",["67","68","69"],"/Users/caleb/IdeaProjects/poke-app-v1/src/components/GetPokemon.js",["70","71"],"import React, {useEffect, useState} from 'react';\nimport CreatePokeCards from \"./CreatePokeCards\";\nimport {faPlusSquare} from '@fortawesome/free-solid-svg-icons';\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\nimport {faMinusSquare} from \"@fortawesome/free-solid-svg-icons\";\n\n\n//Create favorite functionality\n//deploy with AWS\n\nfunction GetPokemon({Gen1Pokemon, Gen2Pokemon, Gen3Pokemon, Gen4Pokemon, Gen5Pokemon, Gen6Pokemon, Gen7Pokemon, Gen8Pokemon}) {\n    const [toggleGen1, setToggleGen1] = useState(true);\n    const [toggleGen2, setToggleGen2] = useState( true);\n    const [toggleGen3, setToggleGen3] = useState(true);\n    const [toggleGen4, setToggleGen4] = useState(true);\n    const [toggleGen5, setToggleGen5] = useState(true);\n    const [toggleGen6, setToggleGen6] = useState(true);\n    const [toggleGen7, setToggleGen7] = useState(true);\n    const [toggleGen8, setToggleGen8] = useState(true);\n\n    let allGens = [Gen1Pokemon, Gen2Pokemon, Gen3Pokemon, Gen4Pokemon, Gen5Pokemon, Gen6Pokemon, Gen7Pokemon, Gen8Pokemon];\n    let allPokemon = [];\n    for (let gen of allGens) {\n        for(let pokemon of gen) {\n            allPokemon.push(pokemon);\n        }\n    }\n\n    return (\n        <main>\n            <section>\n                <div className={\"gen-header\"}>\n                    <h4>Generation 1</h4>\n                    <div>\n                        <FontAwesomeIcon className={\"toggle-gen\"} onClick={() => {setToggleGen1(!toggleGen1)}} icon={faPlusSquare}/>\n                    </div>\n                </div>\n                <div className={\"grid-container\"}>\n                    {CreatePokeCards(Gen1Pokemon, toggleGen1)}\n                </div>\n            </section>\n\n            <section>\n                <div className={\"gen-header\"}>\n                    <h4>Generation 2</h4>\n                    <div>\n                        <FontAwesomeIcon className={\"toggle-gen\"} onClick={() => {setToggleGen2(!toggleGen2)}} icon={faPlusSquare}/>\n                    </div>\n                </div>\n                <div className={\"grid-container\"}>\n                    {CreatePokeCards(Gen2Pokemon, toggleGen2)}\n                </div>\n            </section>\n\n            <section>\n                <div className={\"gen-header\"}>\n                    <h4>Generation 3</h4>\n                    <div>\n                        <FontAwesomeIcon className={\"toggle-gen\"} onClick={() => {setToggleGen3(!toggleGen3)}} icon={faPlusSquare}/>\n                    </div>\n                </div>\n                <div className={\"grid-container\"}>\n                    {CreatePokeCards(Gen3Pokemon, toggleGen3)}\n                </div>\n            </section>\n\n            <section>\n                <div className={\"gen-header\"}>\n                    <h4>Generation 4</h4>\n                    <div>\n                        <FontAwesomeIcon className={\"toggle-gen\"} onClick={() => {setToggleGen4(!toggleGen4)}} icon={faPlusSquare}/>\n                    </div>\n                </div>\n                <div className={\"grid-container\"}>\n                    {CreatePokeCards(Gen4Pokemon, toggleGen4)}\n                </div>\n            </section>\n\n            <section>\n                <div className={\"gen-header\"}>\n                    <h4>Generation 5</h4>\n                    <div>\n                        <FontAwesomeIcon className={\"toggle-gen\"} onClick={() => {setToggleGen5(!toggleGen5)}} icon={faPlusSquare}/>\n                    </div>\n                </div>\n                <div className={\"grid-container\"}>\n                    {CreatePokeCards(Gen5Pokemon, toggleGen5)}\n                </div>\n            </section>\n\n            <section>\n                <div className={\"gen-header\"}>\n                    <h4>Generation 6</h4>\n                    <div>\n                        <FontAwesomeIcon className={\"toggle-gen\"} onClick={() => {setToggleGen6(!toggleGen6)}} icon={faPlusSquare}/>\n                    </div>\n                </div>\n                <div className={\"grid-container\"}>\n                    {CreatePokeCards(Gen6Pokemon, toggleGen6)}\n                </div>\n            </section>\n\n            <section>\n                <div className={\"gen-header\"}>\n                    <h4>Generation 7</h4>\n                    <div>\n                        <FontAwesomeIcon className={\"toggle-gen\"} onClick={() => {setToggleGen7(!toggleGen7)}} icon={faPlusSquare}/>\n                    </div>\n                </div>\n                <div className={\"grid-container\"}>\n                    {CreatePokeCards(Gen7Pokemon, toggleGen7)}\n                </div>\n            </section>\n\n            <section>\n                <div className={\"gen-header\"}>\n                    <h4>Generation 8</h4>\n                    <div>\n                        <FontAwesomeIcon className={\"toggle-gen\"} onClick={() => {setToggleGen8(!toggleGen8)}} icon={faPlusSquare}/>\n                    </div>\n                </div>\n                <div className={\"grid-container\"}>\n                    {CreatePokeCards(Gen8Pokemon, toggleGen8)}\n                </div>\n            </section>\n        </main>\n    )\n}\n\nexport default GetPokemon;","/Users/caleb/IdeaProjects/poke-app-v1/src/components/NavbarIndex.js",["72"],"import React, {useState} from 'react';\nimport pokeball from './Images/pokeball1.png';\nimport allTypes from './Images/all_types.png';\nimport {FontAwesomeIcon} from '@fortawesome/react-fontawesome'\nimport {faSearch, faStar} from '@fortawesome/free-solid-svg-icons'\nimport {faCaretRight} from '@fortawesome/free-solid-svg-icons'\nimport Modal from \"react-bootstrap/Modal\";\nimport TypeModal from \"./TypeModal\";\n\nconst NavbarIndex = ({ showFavoritePokemon, onFavoritesClick, searchValue, onInputChange }) => {\n    const [showModal, setShowModal] = useState(false);\n    const [isOpen, setIsOpen] = useState(false);\n    const [searchStatus, setSearchStatus] = useState(false);\n\n    const handleHomeBtnClick = () => {\n        onFavoritesClick(false);\n        onInputChange(\"\")\n    }\n\n    const handleInputChange = (event) => {\n        onInputChange(event.target.value)\n    }\n\n    const handleFavoritesClick = () => {\n        onFavoritesClick(!showFavoritePokemon)\n    }\n\n    const callback = (isOpen, showModal) => {\n        setIsOpen(!isOpen);\n        setShowModal(!showModal);\n    }\n\n    const searchTransition = (searchStatus) => {\n        setSearchStatus(!searchStatus)\n        if (isOpen === true) {\n            setSearchStatus(!searchStatus);\n        } else if (isOpen === false) {\n            setSearchStatus(!searchStatus)\n        }\n    }\n\n    const RenderDropdown = () => {\n        if (isOpen === true) {\n            return (\n                <div className={'pokeball-menu'}>\n                    <div className={\"dropdown-link d-flex\" + (searchStatus ? \"\" : \" center-icon\")}>\n                        <FontAwesomeIcon icon={faSearch} size=\"2x\" onClick={() => {searchTransition(searchStatus);}}\n                        className={\"nav-links circular align-self-center hover\" + (searchStatus ? \" search-hide\" : \" search-show\")}></FontAwesomeIcon>\n                        <div className={\"search-container d-flex align-self-center\" + (!searchStatus ? \" search-hide\" : \" search-show\")}>\n                            <FontAwesomeIcon icon={faCaretRight} size=\"2x\"\n                            className={\"align-self-center mr-1 hover \" + (!searchStatus ? \"search-hide\" : \"search-show\")}\n                            onClick={() => {\n                                setSearchStatus(false)\n                            }}></FontAwesomeIcon>\n                            <input autoFocus\n                                   className={\"nav-links round-input\" + (!searchStatus ? \" search-hide\" : \" search-show\")}\n                                   placeholder={\"Search...\"} type={\"text\"}\n                                   onChange={handleInputChange}\n                                   value={searchValue}\n                            />\n                        </div>\n                    </div>\n                    <FontAwesomeIcon icon={faStar} size={\"2x\"} onClick={handleFavoritesClick} className={\"dropdown-link hover center-icon\"}/>\n                    <div className={\"dropdown-link align-self-center\"}>\n                        <img className={(!showModal ? \"all-types\" : \"all-types-active\") + \" p-1\"}\n                             onClick={() => setShowModal(!showModal)\n                             } src={allTypes} alt=\"Filter by types\"/>\n                    </div>\n                </div>\n            )\n        }\n        return null;\n    }\n\n    const pokeballImg = () => {\n        return (\n            <button className={\"buttonInner\" + (!isOpen ? \" closedPokeball\" : \" openPokeball\")}\n                    type={'button'} onClick={() => {\n                setIsOpen(!isOpen)\n                if (isOpen != true) {\n                    setSearchStatus(false)\n                }\n            }}>\n                <img className={\"pokeball\"} src={pokeball} alt=\"pokeball\"/>\n            </button>\n        )\n    }\n\n    return [\n        (\n            <React.Fragment>\n                <nav className={\"nav d-flex\"}>\n                    <h4 className={\"home\"} onClick={() => {handleHomeBtnClick()}}>Poké Finder</h4>\n                    <div className={\"ml-auto mr-3 my-auto drop-icon\"}>\n                        <div className={\"\"}>\n                            {pokeballImg()}\n                        </div>\n                        <RenderDropdown/>\n                    </div>\n                </nav>\n\n                <Modal\n                    show={showModal}\n                    onHide={() => setShowModal(!showModal)}\n                    dialogClassName=\"modal-90w\"\n                    aria-labelledby=\"example-custom-modal-styling-title\"\n                >\n                    <Modal.Header closeButton>\n                        <Modal.Title id=\"example-custom-modal-styling-title\">\n                            Custom Modal Styling\n                        </Modal.Title>\n                    </Modal.Header>\n                    <Modal.Body>\n                        <TypeModal parentCallback={callback}/>\n                    </Modal.Body>\n                </Modal>\n            </React.Fragment>\n        )]\n}\n\nexport default NavbarIndex;","/Users/caleb/IdeaProjects/poke-app-v1/src/components/SearchPokemon.js",["73","74"],"import React, {useEffect, useState} from 'react';\nimport CreatePokeCards from \"./CreatePokeCards\";\n\nconst SearchPokemon = ({Gen1Pokemon, Gen2Pokemon, Gen3Pokemon, Gen4Pokemon, Gen5Pokemon, Gen6Pokemon, Gen7Pokemon, Gen8Pokemon, searchValue}) => {\n    const [error, setError] = useState(null);\n\n    let allPokemon = [Gen1Pokemon, Gen2Pokemon, Gen3Pokemon, Gen4Pokemon, Gen5Pokemon, Gen6Pokemon, Gen7Pokemon, Gen8Pokemon];\n\n\n    if (error) {\n        return <div>Error: {error.message}</div>;\n    } else {\n        if (searchValue) {\n            let filteredPokemon = [];\n            for (let gen of allPokemon) {\n                for (let pokemon of gen) {\n                    if(pokemon.name.includes(searchValue.toLowerCase())) {\n                        filteredPokemon.push(pokemon);\n                    }\n                }\n            }\n            return (\n                <main>\n                    <h4>Search Results</h4>\n                    <section className={\"grid-container\"}>\n                        {CreatePokeCards(filteredPokemon)}\n                    </section>\n                </main>\n            )\n        }\n    }\n}\n\nexport default SearchPokemon;","/Users/caleb/IdeaProjects/poke-app-v1/src/components/TypeModal.js",[],"/Users/caleb/IdeaProjects/poke-app-v1/src/components/CreatePokeCards.js",["75","76","77","78"],"import React, {useEffect, useState} from \"react\";\nimport {faStar} from '@fortawesome/free-solid-svg-icons'\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\nimport Types from \"./Types\";\nimport Modal from \"react-bootstrap/Modal\";\nimport StatChart from \"./StatChart\";\n\nconst CreatePokeCards = (passedPokemon, toggle) => {\n    const [favorites, setFavorites] = useState([]);\n    const [showCardModal, setShowCardModal] = useState(false);\n    const [showCard, setShowCard] = useState(0);\n\n    const toggleFavorite = (pokemon) => {\n        setFavorites([]);\n            if(localStorage.getItem(pokemon.id) === null) {\n                localStorage.setItem(pokemon.id, JSON.stringify(pokemon));\n            }\n            else {\n                localStorage.removeItem(pokemon.id)\n            }\n        Object.keys(localStorage).forEach((key) => {\n            setFavorites([...favorites, JSON.parse(localStorage.getItem(key))])\n        })\n    }\n\n    const  handleClick = (passingId) => {\n        if(showCard === passingId) {\n            setShowCard(0)\n        }\n        else {\n            setShowCard(passingId)\n        }\n    }\n\n    useEffect(() => {\n        console.log(showCard)\n    }, [showCard])\n\n    return (\n        passedPokemon.map((pokemon, index) => {\n            let id = pokemon.id;\n            let height = pokemon.height;\n            let weight = pokemon.weight;\n            let type1 = pokemon.types[0].type.name;\n            const makeType2 = () => {\n                return pokemon.types[1].type.name;\n            }\n            const getStats = () => {\n                let stats = [];\n                for (let stat of pokemon.stats) {\n                    let statName = stat.stat.name;\n                    if (statName === \"hp\") stats.push([(statName.toUpperCase()), (stat.base_stat)]);\n                    else if (statName.includes(\"-\")) {\n                        if (statName.includes(\"t\")) stats.push([((statName.charAt(0).toUpperCase() + statName.substr(1, 1)) + \". \" + statName.charAt(8).toUpperCase() + statName.charAt(9) + statName.charAt(statName.length - 1)).replace(\"-\", \" \"), (stat.base_stat)]);\n                        else stats.push([((statName.charAt(0).toUpperCase() + statName.substr(1, 1)) + \". \" + statName.charAt(8).toUpperCase() + statName.charAt(9) + statName.charAt(10)).replace(\"-\", \" \"), (stat.base_stat)]);\n                    } else stats.push([(statName.charAt(0).toUpperCase() + statName.substr(1, statName.length)), (stat.base_stat)]);\n                }\n                return stats;\n            }\n\n            const statsJSX = (stats) => {\n                return (\n                    <div className={\"cont-flex right-card-info\"}>\n                        <div className={\"right-card-inner\"}>\n                            {stats.slice(0, 3).map(stat => {\n                                return (\n                                    <div className={\"cont-flex stat-block\"}>\n                                        <h6 className={\"card-info-space\"}>{stat[0]}</h6>\n                                        <h6 className={\"card-info-space\"}>{stat[1]}</h6>\n                                    </div>\n                                )\n                            })}\n                        </div>\n                        <div className={\"right-card-inner\"}>\n                            {stats.slice(3, stats.length).map(stat => {\n                                return (\n                                    <div className={\"cont-flex stat-block\"}>\n                                        <h6 className={\"card-info-space\"}>{stat[0]}</h6>\n                                        <h6 className={\"card-info-space\"}>{stat[1]}</h6>\n                                    </div>\n                                )\n                            })}\n                        </div>\n                    </div>\n                    )\n            }\n\n            let passingId = id;\n\n            //Will cycle through the names and modify them to be displayed correctly\n            const modifyName = (name) => {\n\n                let capName = name.charAt(0).toUpperCase() + name.substr(1);\n                if(capName.match(/\\bNidoran-\\b/)) {\n                    if(capName.includes(\"-m\")) return capName.replace(\"-m\", \" ♂\");\n                    else return capName.replace(\"-f\", \" ♀\");\n                }\n                else if(capName.match(/\\bMr-\\b/)) {\n                    let mimeName = capName.substr(0, 3) + capName.charAt(3).toUpperCase() + capName.substr(4);\n                    return mimeName.replace(\"-\", \". \");\n                }\n                else if(capName.match(/\\bTapu-\\b/)) return capName;\n                else if(capName.includes(\"-o\")) {\n                    if(capName.endsWith(\"-o\") || capName.endsWith(\"-oh\")) return capName;\n                    else return capName.split(\"-\", 1);\n                }\n                else if(capName.endsWith(\"-z\") || capName.endsWith(\"null\") || capName.endsWith(\"-jr\")) {\n                    if(capName.endsWith(\"-jr\")) return capName.replace(\"-\", \" \") + \".\";\n                    else return capName;\n                }\n                else if(capName.includes(\"-\")) return capName.split(\"-\", 1);\n                else return capName;\n            }\n\n            const modifyId = (id) => {\n                if(id <= 9) return \"#00\" + id;\n                else if(id >= 10 && id <= 99) return \"#0\" + id;\n                else return \"#\" + id;\n            }\n\n            return (\n                <React.Fragment>\n                <div className={\"grid-item \" + toggle} key={index}>\n                <div className={\"left-card\"}>\n                    <div className={\"dex-entry\"}>\n                        {modifyId(id)}\n                    </div>\n                    <div className={\"image-radius\"} onClick={() => {\n                        handleClick(passingId)\n                        setShowCardModal(!showCardModal)\n                    }}>\n                        <img src={pokemon.sprites.front_default} alt=\"pokeImg\"/>\n                    </div>\n                    <div className={\"true name-block\"}>\n                        {localStorage.getItem(pokemon.id) !== null ?  (\n                            <FontAwesomeIcon icon={faStar} className={\"favorite\"} id={pokemon.id}\n                                             onClick={() => {\n                                                 toggleFavorite(pokemon)\n                                             }}/>\n                        ) : (\n                            <FontAwesomeIcon icon={faStar} className={\"not-favorite\"} id={pokemon.id}\n                                             onClick={() => {\n                                                 toggleFavorite(pokemon)\n                                             }}/>\n                        )}\n                        <p>{modifyName(pokemon.name)}</p>\n                    </div>\n                    <div className={\"typeIcon1\"}>\n                        {Types(type1)}\n                    </div>\n                    <div className={\"typeIcon2\"}>\n                        {pokemon.types[1] !== undefined ? (Types(pokemon.types[1].type.name)) : (<div></div>)}\n                    </div>\n                </div>\n                    {showCard === id ? (\n                        <Modal\n                            show={showCardModal}\n                            onHide={() => {\n                                setShowCardModal(!showCardModal)\n                                setShowCard(0)\n                            }}\n                            // dialogClassName=\"modal-90w\"\n                            aria-labelledby=\"example-custom-modal-styling-title\"\n                        >\n                            <div className={\"pokemon-card\"}>\n                                <div className={\"left-poke-card\"}>\n                                    <div className={\"cont-flex poke-name-block\"}>\n                                        <h6>{modifyId(id)}</h6>\n                                        <h6>{modifyName(pokemon.name)}</h6>\n                                    </div>\n                                    <div className={\"\"}>\n                                        <img src={pokemon.sprites.front_default} alt=\"pokemon-img\"/>\n                                    </div>\n                                    <div className={\"cont-flex left-card-info\"}>\n                                       <div className={\"cont-flex left-card-attr\"}>\n                                           <h6 className={\"\"}>Type</h6>\n                                           <div className={\"cont-flex\"}>\n                                               <div className={\"left-card-attr typeIconModal\"}>\n                                                   {Types(type1)}\n                                                   <h6 className={\"\"}>{type1.charAt(0).toUpperCase() + type1.substr(1)}</h6>\n                                               </div>\n                                               {pokemon.types[1] !== undefined ?\n                                                   (<div className={\"left-card-attr typeIconModal\"}>\n                                                       {Types(makeType2())}\n                                                       <h6 className={\"\"}>{makeType2().charAt(0).toUpperCase() + makeType2().substr(1)}</h6>\n                                                   </div>) : (<div className={\"typeIcon2\"}><div></div></div>)\n                                               }\n                                           </div>\n                                       </div>\n                                        <div className={\"cont-flex left-card-attr\"}>\n                                           <h6 className={\"\"}>Height</h6>\n                                           <h6></h6>\n                                        </div>\n                                        <div className={\"cont-flex left-card-attr\"}>\n                                           <h6 className={\"\"}>Weight</h6>\n                                           <h6></h6>\n                                        </div>\n                                    </div>\n                                </div>\n                                <div className={\"right-poke-card\"}>\n                                    <StatChart name={modifyName(pokemon.name)} data={getStats()}/>\n                                    <div className={\"right-card-info-cont\"}>{statsJSX(getStats())}</div>\n                                </div>\n                                <div>\n\n                                </div>\n                            </div>\n                        </Modal>\n                    ) : (\n                        <div></div>\n                    )\n                    }\n                </div>\n                </React.Fragment>\n            )\n        })\n    )\n}\n\nexport default CreatePokeCards;\n\n\n","/Users/caleb/IdeaProjects/poke-app-v1/src/components/Hooks/useLoader.js",[],"/Users/caleb/IdeaProjects/poke-app-v1/src/components/Loader.js",[],"/Users/caleb/IdeaProjects/poke-app-v1/src/components/FavoritePokemon.js",["79","80"],"import React, {useState} from 'react';\nimport CreatePokeCards from \"./CreatePokeCards\";\nimport {faMinusSquare} from \"@fortawesome/free-solid-svg-icons\";\n\nconst FavoritePokemon = () => {\n    const [error, setError] = useState(null);\n\n    if (error) {\n        return <div>Error: {error.message}</div>;\n    } else {\n        let favoritePokemon = [];\n        for(let i = 0; i <= 898; i++) {\n            if(localStorage.getItem(i) === null) {\n                continue;\n            }\n            favoritePokemon.push(JSON.parse(localStorage.getItem(i)));\n        }\n\n        return (\n            <main>\n                <h4>Favorite Pokemon</h4>\n                <section className={\"grid-container\"}>\n                    {CreatePokeCards(favoritePokemon)}\n                </section>\n            </main>\n        )\n    }\n}\n\nexport default FavoritePokemon;","/Users/caleb/IdeaProjects/poke-app-v1/src/components/CardInfo.js",["81"],"import React from 'react';\n\nconst CardInfo = ({id, height, weight, type1, type2}) => {\n    const capType = (type) => { return type.charAt(0).toUpperCase() + type.substr(1)}\n\n    return (\n            <div className={type2 === \"\" ? \"right-card1\" : \"right-card2\"}>\n            <p className={\"right-card-p\"}>Height: {Math.round((height * .1) * 100 + Number.EPSILON) / 100} meters</p>\n            <p className={\"right-card-p\"}>Weight: {Math.round((weight * .1) * 100 + Number.EPSILON) / 100} kg</p>\n        </div>\n    )\n\n}\n\nexport default CardInfo;",["82","83"],"/Users/caleb/IdeaProjects/poke-app-v1/src/components/Types.js",[],"/Users/caleb/IdeaProjects/poke-app-v1/src/components/StatChart.js",["84","85","86"],"import React, {useEffect, useState} from \"react\";\nimport {Radar} from \"react-chartjs-2\";\n\nconst StatChart = (statData) => {\n    const [chartData, setChartData] = useState({});\n\n    // let chart = document.getElementById(\"pokeChart\");\n    let statLabels = [];\n    let statValues = [];\n    for(let stat of statData.data) {\n        statLabels.push(stat[0]);\n        statValues.push(stat[1])\n    }\n\n    const data = {\n        labels: statLabels,\n        datasets: [\n            {\n                label: statData.name + \"'s Stats\",\n                backgroundColor: 'rgba(179,181,198,0.2)',\n                borderColor: 'rgba(179,181,198,1)',\n                pointBackgroundColor: 'rgba(179,181,198,1)',\n                pointBorderColor: '#fff',\n                // pointHoverBackgroundColor: '#fff',\n                // pointHoverBorderColor: 'rgba(179,181,198,1)',\n                data: statValues\n            }\n        ]\n    };\n\n    return (\n        <div className={\"radar-cont\"}>\n            <Radar data={data}/>\n        </div>\n    )\n}\n\nexport default StatChart;",{"ruleId":"87","severity":1,"message":"88","line":1,"column":16,"nodeType":"89","messageId":"90","endLine":1,"endColumn":24},{"ruleId":"91","replacedBy":"92"},{"ruleId":"93","replacedBy":"94"},{"ruleId":"87","severity":1,"message":"95","line":23,"column":28,"nodeType":"89","messageId":"90","endLine":23,"endColumn":45},{"ruleId":"96","severity":1,"message":"97","line":55,"column":34,"nodeType":"98","endLine":55,"endColumn":36,"suggestions":"99"},{"ruleId":"87","severity":1,"message":"100","line":57,"column":9,"nodeType":"89","messageId":"90","endLine":57,"endColumn":18},{"ruleId":"87","severity":1,"message":"101","line":1,"column":16,"nodeType":"89","messageId":"90","endLine":1,"endColumn":25},{"ruleId":"87","severity":1,"message":"102","line":5,"column":9,"nodeType":"89","messageId":"90","endLine":5,"endColumn":22},{"ruleId":"103","severity":1,"message":"104","line":80,"column":28,"nodeType":"105","messageId":"106","endLine":80,"endColumn":30},{"ruleId":"87","severity":1,"message":"101","line":1,"column":16,"nodeType":"89","messageId":"90","endLine":1,"endColumn":25},{"ruleId":"87","severity":1,"message":"107","line":5,"column":19,"nodeType":"89","messageId":"90","endLine":5,"endColumn":27},{"ruleId":"87","severity":1,"message":"108","line":42,"column":17,"nodeType":"89","messageId":"90","endLine":42,"endColumn":23},{"ruleId":"87","severity":1,"message":"109","line":43,"column":17,"nodeType":"89","messageId":"90","endLine":43,"endColumn":23},{"ruleId":"110","severity":1,"message":"111","line":192,"column":44,"nodeType":"112","endLine":192,"endColumn":48},{"ruleId":"110","severity":1,"message":"111","line":196,"column":44,"nodeType":"112","endLine":196,"endColumn":48},{"ruleId":"87","severity":1,"message":"102","line":3,"column":9,"nodeType":"89","messageId":"90","endLine":3,"endColumn":22},{"ruleId":"87","severity":1,"message":"107","line":6,"column":19,"nodeType":"89","messageId":"90","endLine":6,"endColumn":27},{"ruleId":"87","severity":1,"message":"113","line":4,"column":11,"nodeType":"89","messageId":"90","endLine":4,"endColumn":18},{"ruleId":"91","replacedBy":"114"},{"ruleId":"93","replacedBy":"115"},{"ruleId":"87","severity":1,"message":"101","line":1,"column":16,"nodeType":"89","messageId":"90","endLine":1,"endColumn":25},{"ruleId":"87","severity":1,"message":"116","line":5,"column":12,"nodeType":"89","messageId":"90","endLine":5,"endColumn":21},{"ruleId":"87","severity":1,"message":"117","line":5,"column":23,"nodeType":"89","messageId":"90","endLine":5,"endColumn":35},"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","no-native-reassign",["118"],"no-negated-in-lhs",["119"],"'setShowGetPokemon' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getData'. Either include it or remove the dependency array.","ArrayExpression",["120"],"'byPokeUrl' is assigned a value but never used.","'useEffect' is defined but never used.","'faMinusSquare' is defined but never used.","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","'setError' is assigned a value but never used.","'height' is assigned a value but never used.","'weight' is assigned a value but never used.","jsx-a11y/heading-has-content","Headings must have content and the content must be accessible by a screen reader.","JSXOpeningElement","'capType' is assigned a value but never used.",["118"],["119"],"'chartData' is assigned a value but never used.","'setChartData' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"121","fix":"122"},"Update the dependencies array to be: [getData]",{"range":"123","text":"124"},[2199,2201],"[getData]"]