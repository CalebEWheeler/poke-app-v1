[{"/Users/caleb/IdeaProjects/poke-app-v1/src/index.js":"1","/Users/caleb/IdeaProjects/poke-app-v1/src/components/App.js":"2","/Users/caleb/IdeaProjects/poke-app-v1/src/components/GetPokemon.js":"3","/Users/caleb/IdeaProjects/poke-app-v1/src/components/NavbarIndex.js":"4","/Users/caleb/IdeaProjects/poke-app-v1/src/components/SearchPokemon.js":"5","/Users/caleb/IdeaProjects/poke-app-v1/src/components/TypeModal.js":"6","/Users/caleb/IdeaProjects/poke-app-v1/src/components/CreatePokeCards.js":"7"},{"size":217,"mtime":1611258528097,"results":"8","hashOfConfig":"9"},{"size":615,"mtime":1611523034318,"results":"10","hashOfConfig":"9"},{"size":5059,"mtime":1611522215612,"results":"11","hashOfConfig":"9"},{"size":4428,"mtime":1611525431540,"results":"12","hashOfConfig":"9"},{"size":523,"mtime":1611525431531,"results":"13","hashOfConfig":"9"},{"size":2929,"mtime":1611252459526,"results":"14","hashOfConfig":"9"},{"size":1654,"mtime":1611522145945,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"18","usedDeprecatedRules":"19"},"ww143j",{"filePath":"20","messages":"21","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"22","messages":"23","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"24","messages":"25","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"26"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"19"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/caleb/IdeaProjects/poke-app-v1/src/index.js",["33"],"import React, {useState} from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(<App/>, document.querySelector('#root'));\n\n",["34","35"],"/Users/caleb/IdeaProjects/poke-app-v1/src/components/App.js",["36"],"/Users/caleb/IdeaProjects/poke-app-v1/src/components/GetPokemon.js",["37","38","39"],"/Users/caleb/IdeaProjects/poke-app-v1/src/components/NavbarIndex.js",["40"],"import React, {useState} from 'react';\nimport pokeball from './Images/pokeball1.png';\nimport allTypes from './Images/all_types.png';\nimport {FontAwesomeIcon} from '@fortawesome/react-fontawesome'\nimport {faSearch} from '@fortawesome/free-solid-svg-icons'\nimport {faCaretRight} from '@fortawesome/free-solid-svg-icons'\nimport Modal from \"react-bootstrap/Modal\";\nimport TypeModal from \"./TypeModal\";\n//WILL NEED TO FIND A SOLUTION THAT WILL REDIRECT A USER TO THE SEARCHPOKEMON PAGE IF THE SEARCH INPUT FIELD IS NOT AN EMPTY STRING AND IF A TYPE IS CLICKED\nconst NavbarIndex = () => {\n    const [showModal, setShowModal] = useState(false);\n    const [isOpen, setIsOpen] = useState(false);\n    const [searchStatus, setSearchStatus] = useState(false);\n    const [searchValue, setSearchValue] = useState(\"\");\n\n    const callback = (isOpen, showModal) => {\n        setIsOpen(!isOpen);\n        setShowModal(!showModal);\n    }\n\n    const searchTransition = (searchStatus) => {\n        setSearchStatus(!searchStatus)\n        if(isOpen === true) {\n            setSearchStatus(!searchStatus);\n        }\n        else if(isOpen === false) {\n            setSearchStatus(!searchStatus)\n        }\n    }\n\n    const RenderDropdown = () => {\n        if (isOpen === true) {\n            return (\n                <div className={'pokeball-menu'}>\n                        <div className={\"dropdown-link d-flex\" + (searchStatus ? \"\" : \" center-icon\")}>\n                            <FontAwesomeIcon icon={faSearch} size=\"2x\" onClick={() => {searchTransition(searchStatus);}}\n                            className={\"nav-links circular align-self-center hover\" + (searchStatus ? \" search-hide\" : \" search-show\")}></FontAwesomeIcon>\n                            <div className={\"search-container d-flex align-self-center\" + (!searchStatus ? \" search-hide\" : \" search-show\")}>\n                                <FontAwesomeIcon icon={faCaretRight} size=\"2x\" className={\"align-self-center mr-1 hover \" + (!searchStatus ? \"search-hide\" : \"search-show\")} onClick={() => {setSearchStatus(false)}}></FontAwesomeIcon>\n                                <input autoFocus className={\"nav-links round-input\" + (!searchStatus ? \" search-hide\" : \" search-show\")} placeholder={\"Search...\"} type={\"text\"}\n                                       onChange={event => {setSearchValue(event.target.value)}}\n                                       value={searchValue}\n                                />\n                            </div>\n                        </div>\n                        <div className={\"dropdown-link align-self-center\"}>\n                                <img className={(!showModal ? \"all-types\" : \"all-types-active\") + \" p-1\"} onClick={() => setShowModal(!showModal)\n                                } src={allTypes} alt=\"Filter by types\"/>\n                        </div>\n                </div>\n            )\n        }\n        return null;\n    }\n\n    const pokeballImg = () => {\n        return (\n            <button className={\"buttonInner\" + (!isOpen ? \" closedPokeball\" : \" openPokeball\")}\n                    type={'button'} onClick={() => {\n                setIsOpen(!isOpen)\n                if(isOpen != true) {\n                    setSearchStatus(false)\n                }\n            }}>\n                <img className={\"pokeball\"} src={pokeball} alt=\"pokeball\"/>\n            </button>\n        )\n    }\n\n    return [\n\n        (\n        <React.Fragment>\n            <nav className={\"nav d-flex\"}>\n                <h4>Pok√© Finder</h4>\n                <div className={\"ml-auto mr-3 my-auto drop-icon\"}>\n                    <div className={\"\"}>\n                        {pokeballImg()}\n                    </div>\n                    <RenderDropdown/>\n                </div>\n            </nav>\n\n            <Modal\n                show={showModal}\n                onHide={() => setShowModal(!showModal)}\n                dialogClassName=\"modal-90w\"\n                aria-labelledby=\"example-custom-modal-styling-title\"\n            >\n                <Modal.Header closeButton>\n                    <Modal.Title id=\"example-custom-modal-styling-title\">\n                        Custom Modal Styling\n                    </Modal.Title>\n                </Modal.Header>\n                <Modal.Body>\n                    <TypeModal parentCallback={callback}/>\n                </Modal.Body>\n            </Modal>\n        </React.Fragment>\n    )]\n}\n\nexport default NavbarIndex;","/Users/caleb/IdeaProjects/poke-app-v1/src/components/SearchPokemon.js",["41"],"/Users/caleb/IdeaProjects/poke-app-v1/src/components/TypeModal.js",[],"/Users/caleb/IdeaProjects/poke-app-v1/src/components/CreatePokeCards.js",[],{"ruleId":"42","severity":1,"message":"43","line":1,"column":16,"nodeType":"44","messageId":"45","endLine":1,"endColumn":24},{"ruleId":"46","replacedBy":"47"},{"ruleId":"48","replacedBy":"49"},{"ruleId":"42","severity":1,"message":"50","line":7,"column":8,"nodeType":"44","messageId":"45","endLine":7,"endColumn":21},{"ruleId":"42","severity":1,"message":"51","line":11,"column":19,"nodeType":"44","messageId":"45","endLine":11,"endColumn":27},{"ruleId":"42","severity":1,"message":"52","line":12,"column":22,"nodeType":"44","messageId":"45","endLine":12,"endColumn":33},{"ruleId":"53","severity":1,"message":"54","line":53,"column":28,"nodeType":"55","endLine":53,"endColumn":30,"suggestions":"56"},{"ruleId":"57","severity":1,"message":"58","line":63,"column":27,"nodeType":"59","messageId":"60","endLine":63,"endColumn":29},{"ruleId":"42","severity":1,"message":"61","line":2,"column":8,"nodeType":"44","messageId":"45","endLine":2,"endColumn":23},"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","no-native-reassign",["62"],"no-negated-in-lhs",["63"],"'SearchPokemon' is defined but never used.","'setError' is assigned a value but never used.","'setIsLoaded' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'renderPokemon'. Either include it or remove the dependency array.","ArrayExpression",["64"],"eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","'CreatePokeCards' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"65","fix":"66"},"Update the dependencies array to be: [renderPokemon]",{"range":"67","text":"68"},[2066,2068],"[renderPokemon]"]